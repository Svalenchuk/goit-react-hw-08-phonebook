{"version":3,"file":"static/js/963.c732a43a.chunk.js","mappings":"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","sources":["components/App.styled.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx","redux/auth/authSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div` \n    width: 600px;\n    margin-right: auto;\n    margin-left: auto; \n    background-color: #fff;\n    box-shadow: 0 1px 0 rgba(17, 17, 26, 0.1), 0 8px 24px rgba(17, 17, 26, 0.1),\n        0 16px 48px rgba(17, 17, 26, 0.1);\n       border-radius: 10px; \n\n.title {\n      text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 28px;\n    font-weight: 700;\n    color: black;\n    \n} \n`;\n\nexport const DivStyle = styled.div`\n  font-size: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5em;\n  margin-top: 2em;\n`;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/Contacts/contactsOperetions';  \nimport { useForm } from 'react-hook-form'; \nimport css from './ContactForm.module.css';   \nimport { Container } from 'components/App.styled';   \n\nconst schema = yup\n  .object({\n    name: yup.string().min(4).max(32).required(),\n    number: yup.string().min(6).max(16).required(),\n  })\n  .required();\n\nexport default function ContactForm() {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const { items } = useSelector(state => state.contacts);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    const formattedName = data.name.toLowerCase(); // Convert the new contact's name to lowercase\n  \n    // Check if the contact with the same name (case insensitive) already exists\n    if (items.find(({ name }) => name.toLowerCase() === formattedName)) {\n      alert(`${data.name} is already in contacts`);\n      reset();\n      return;\n    }\n  \n    dispatch(addContact(data));\n    reset();\n  };\n\n  return (\n      < Container >\n      <form className={css.form} onSubmit={handleSubmit(onSubmit)}>    \n        <label className={css.formLabel}>Name </label>\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я\\]+(([' \\\\-\\][a-zA-Zа-яА-Я \\])?[a-zA-Zа-яА-Я\\]*)*$\" \n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n           {...register('name', { required: true })}\n                    \n        />\n        <label className={css.formLabel}>Number </label>\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          name=\"phone\" \n          pattern=\"\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s\\]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s\\]?\\\\d{1,4}[ .\\\\-\\\\s\\]?\\\\d{1,4}[ .\\\\-\\\\s\\]?\\\\d{1,9}\" \n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter phone number\" {...register('number')} \n        />\n         <span>{errors.number?.message}</span> \n        <button className={css.formBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n  </Container>   \n    );  \n  }  ","import Loading from '../Loading/Loading';\nimport { deleteContact } from '../../redux/Contacts/contactsOperetions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(state => state.contacts);\n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <li>\n          <span>{name}:</span>\n          <span>{number}</span>\n          <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n       x\n          </button>\n        </li>\n      )}\n    </>\n  );\n};\n\nexport default ContactItem; ","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  font-size: 24px;\n  gap: 12px;\n  margin-top: 1em;\n\n  li {\n    padding: 0.4em 1em;\n    display: flex;\n    align-items: center;\n    border: 1px solid #000;\n    border-radius: 30px;\n    box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\n      rgba(0, 0, 0, 0.22) 0px 15px 12px;\n  }\n  span + span {\n    margin-left: 14px;\n  }\n  button {\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n    display: flex;\n    text-align: center;\n    align-items: center;\n    margin-left: auto;\n    width: 40px;\n    height: 40px;\n    background-color: transparent;\n    border: 2px solid #d60101;\n    border-radius: 50%;\n    cursor: pointer;\n    font-size: 20px;\n    color: #d60101;\n    transition: all 0.3s ease-in-out;\n    &:hover,\n    &:focus {\n      border: 2px solid white;\n      background-color: transparent;\n      color: white;\n      box-shadow: 0px 0px 15px 10px rgba(255, 0, 0, 0.4);\n    }\n  }\n`;","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  padding: 6px 12px;\n  background-color: transparent;\n  border: 1px solid black;\n  border-radius: 1em;\n  &::placeholder {\n    color: black;\n    font-size: 16px;\n  }\n`;","import { Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/Contacts/contactFilter';\n\n\nconst Filter = () => {\n  const { filter } = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Input\n        placeholder=\"Search name\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </>\n  );\n};\n\nexport default Filter; ","import { useSelector } from 'react-redux';\nimport ContactItem from '../ContactItem/ContactItem'; \nimport { List } from './ContactList.styled'\nimport { Container } from '../App.styled';\nimport { selectIsLoggedIn } from '../../redux/auth/authSelectors';\nimport Filter from '../../components/Filter/Filter'\nimport { Navigate } from 'react-router-dom';\n\nconst ContactList = () => {\n  const { items } = useSelector(state => state.contacts);\n  const { filter } = useSelector(state => state.filter);\n  const isLogedIn = useSelector(selectIsLoggedIn);\n  const getFilterContacts = () => {\n    if (filter === '') return items;\n\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = getFilterContacts();\n\n  return (\n    <Container>\n      {isLogedIn ? (\n        <>\n          <Filter />\n          <List>\n            {filteredContacts.length > 0 ? (\n              filteredContacts.map(({ name, id, number }) => (\n                <ContactItem key={id} name={name} id={id} number={number} />\n              ))\n            ) : (\n              <h2>Empty...</h2> \n            )}\n          </List>\n        </>\n      ) : (\n        <Navigate to=\"/login\" replace />\n      )}\n    </Container> \n  );\n};\n\nexport default ContactList; ","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/Contacts/contactsOperetions'; \nimport { selectIsLoggedIn } from '../redux/auth/authSelectors'; \n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLogedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    if (isLogedIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLogedIn]);\n\n  return (\n    <>\n      {isLogedIn && <ContactForm />} \n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;","export const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectLoading = state => state.auth.isLoading;\nexport const selectError = state => state.auth.error;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","DivStyle","_templateObject2","schema","yup","name","min","max","required","number","ContactForm","_errors$number","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","items","useSelector","state","contacts","dispatch","useDispatch","_jsx","children","_jsxs","className","css","onSubmit","data","formattedName","toLowerCase","find","_ref","alert","concat","addContact","_objectSpread","type","pattern","title","placeholder","message","id","isLoading","_Fragment","Loading","onClick","deleteContact","List","Input","filter","value","onChange","e","setFilter","target","isLogedIn","selectIsLoggedIn","filteredContacts","includes","Filter","length","map","_ref2","ContactItem","Navigate","to","replace","useEffect","fetchContacts","ContactList","auth","isLoggedIn","selectLoading","selectUser","user"],"sourceRoot":""}